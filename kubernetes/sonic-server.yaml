apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonic-server
  name: sonic-server-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sonic-server
  template:
    metadata:
      labels:
        app: sonic-server
    spec:
      containers:
        - env:
            - name: NODE_ENV
              value: production
            - name: GRPC_PORT
              value: "50051"
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: sonic-server-secret
                  key: mongo-uri
            - name: DB_NAME
              value: "web-shopping"
            - name: NODE_ID
              value: sonic_node_1
            - name: SONIC_AUTH
              valueFrom:
                secretKeyRef:
                  name: sonic-server-secret
                  key: sonic-auth
            - name: SONIC_HOST
              value: localhost # Because the sonic-engine is running in the same pod
            - name: SONIC_PORT
              value: "1491"
          image: nieltran/sonic-server:v1.0
          imagePullPolicy: Always
          name: sonic-server
          ports:
            - containerPort: 50051
          volumeMounts:
            - mountPath: /etc/sonic.cfg
              name: sonic-server-config
              subPath: sonic.cfg # Match the key in the ConfigMap
      volumes:
        - configMap:
            items:
              - key: sonic.cfg
                path: sonic.cfg
            name: sonic-server-config
          name: sonic-server-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonic-server
  name: sonic-server
spec:
  type: ClusterIP
  ports:
    - name: "sonic-grpc"
      port: 50051 # Service port, can be different from targetPort
      targetPort: 50051 # Port to sonic-server container
      protocol: TCP
  selector:
    app: sonic-server
---
apiVersion: v1
data:
  sonic.cfg: |-
    # Sonic
    # Fast, lightweight and schema-less search backend
    # Configuration file

    [server]
    log_level = "info" # Can be debug, info, warn, error

    [channel]
    inet = "0.0.0.0:1491" # Sonic server listens internally on 1491 within its container
    tcp_timeout = 300
    auth_password = "${env.SONIC_AUTH}" # Password from environment

    [channel.search]
    query_limit_default = 10
    query_limit_maximum = 100
    query_alternates_try = 4

    suggest_limit_default = 5
    suggest_limit_maximum = 20

    list_limit_default = 100
    list_limit_maximum = 500

    [store]
    [store.kv]
    path = "/var/lib/sonic/store/kv/"
    retain_word_objects = 1000

    [store.kv.pool]
    inactive_after = 1800

    [store.kv.database]
    flush_after = 900
    compress = true
    parallelism = 2
    max_files = 100
    max_compactions = 1
    max_flushes = 1
    write_buffer = 16384
    write_ahead_log = true

    [store.fst]
    path = "/var/lib/sonic/store/fst/"

    [store.fst.pool]
    inactive_after = 300

    [store.fst.graph]
    consolidate_after = 0
    max_size = 2048
    max_words = 250000
kind: ConfigMap
metadata:
  labels:
    app: sonic-server
  name: sonic-server-config
---