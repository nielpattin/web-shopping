worker_processes 1;

events {
    worker_connections 1024;
}

http {
    upstream web_apps {
        least_conn; # Use least connections for load balancing
        ip_hash; # Optional: Use IP hash for session persistence
        server main-app-1:3030;
        server main-app-2:3030;
    }

    upstream sonic_backends_grpc {
        # Nginx will use round-robin by default for gRPC
        server sonic-server-1:50051;
        server sonic-server-2:50051;
        server sonic-server-3:50051;
    }

    server {
        listen 80; # Public facing port for user traffic
        server_name localhost; # Or real domain

        location / {
            proxy_pass http://web_apps;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Server block for internal gRPC load balancing to Sonic
    # This server listens on a port that your web_apps will connect to for Sonic services
    server {
        listen 50000; # Port for gRPC traffic
        http2 on;     # Enable HTTP/2 for this server block

        location / {
            # Pass requests to the sonic_backends_grpc upstream
            grpc_pass grpc://sonic_backends_grpc;

            # Optional: set timeouts for gRPC
            grpc_connect_timeout 5s;
            grpc_read_timeout 30s;
            grpc_send_timeout 30s;
        }
    }
}